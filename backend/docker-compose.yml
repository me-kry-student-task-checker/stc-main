version: '2'

networks:
  studentTaskChecker:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.22/16
          gateway: 172.18.0.1

services:
  #  zipkin-storage:
  #    image: openzipkin/zipkin-mysql
  #    container_name: zipkin-storage
  #    networks:
  #      - studentTaskChecker
  #  zipkin:
  #    image: openzipkin/zipkin
  #    container_name: zipkin
  #    networks:
  #      - studentTaskChecker
  #    environment:
  #      - STORAGE_TYPE=mysql
  #      - MYSQL_HOST=zipkin-storage
  #    ports:
  #      - "9411"
  #    depends_on:
  #      - zipkin-storage

  #  cloud-sql-proxy:
  #    image: gcr.io/cloudsql-docker/gce-proxy:1.12
  #    container_name: cloud-sql-proxy
  #    command: /cloud_sql_proxy -instances=studenttaskchecker:europe-west6:database1=tcp:cloud-sql-proxy:3306 -credential_file=/credential/cred.json
  #    volumes:
  #      - ./docker/provision/gcp/credential:/credential
  #    networks:
  #      - studentTaskChecker
  #    ports:
  #      - "3666:3306" # Mind the difference

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:latest
    networks:
      - studentTaskChecker
    ports:
      - 1025:1025
      - 8025:8025

  mysql-database:
    image: mysql:5.7
    container_name: mysql-database
    command: mysqld --character-set-server=utf8mb4
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
    volumes:
      - ./docker/provision/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - studentTaskChecker
    ports:
      - "3666:3306" # Mind the difference


  config-service:
    container_name: config-service
    build:
      context: ./config-service
      dockerfile: dockerfile
    image: config-service:latest
    networks:
      - studentTaskChecker
    ports:
      - "8888"

  discovery-service-peer1:
    container_name: discovery-service-peer1
    build:
      context: ./discovery-service
      dockerfile: dockerfile
    image: discovery-service-peer1:latest
    networks:
      - studentTaskChecker
    ports:
      - "8761:8761"
    depends_on:
      - config-service

  discovery-service-peer2:
    container_name: discovery-service-peer2
    build:
      context: ./discovery-service
      dockerfile: dockerfile
    image: discovery-service-peer2:latest
    networks:
      - studentTaskChecker
    ports:
      - "8761"
    depends_on:
      - config-service

  gateway-service:
    container_name: gateway-service
    build:
      context: ./gateway-service
      dockerfile: dockerfile
    image: gateway-service:latest
    networks:
      - studentTaskChecker
    ports:
      - "8060:8060"
    depends_on:
      - config-service
      - discovery-service-peer1
      - discovery-service-peer2

  email-service:
    container_name: email-service
    build:
      context: ./email-service
      dockerfile: dockerfile
    image: email-service:latest
    networks:
      - studentTaskChecker
    ports:
      - "8080"
    depends_on:
      - config-service
      - discovery-service-peer1
      - discovery-service-peer2
      - mailhog

  task-service:
    container_name: task-service
    build:
      context: ./task-service
      dockerfile: dockerfile
    image: task-service:latest
    networks:
      - studentTaskChecker
    ports:
      - "8080"
    depends_on:
      - config-service
      - discovery-service-peer1
      - discovery-service-peer2
      - mysql-database

  course-service:
    container_name: course-service
    build:
      context: ./course-service
      dockerfile: dockerfile
    image: course-service:latest
    networks:
      - studentTaskChecker
    ports:
      - "8080"
    depends_on:
      - config-service
      - discovery-service-peer1
      - discovery-service-peer2
      - mysql-database


  filemanagement-service:
    container_name: filemanagement-service
    volumes:
      - ./docker/provision/gcp/credential:/credential
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/credential/cred.json
    build:
      context: ./filemanagement-service
      dockerfile: dockerfile
    image: filemanagement-service:latest
    networks:
      - studentTaskChecker
    ports:
      - "8080"
    depends_on:
      - config-service
      - discovery-service-peer1
      - discovery-service-peer2
      - mysql-database


  feedback-service:
    container_name: feedback-service
    build:
      context: ./feedback-service
      dockerfile: dockerfile
    image: feedback-service:latest
    networks:
      - studentTaskChecker
    ports:
      - "8080"
    depends_on:
      - config-service
      - discovery-service-peer1
      - discovery-service-peer2
      - mysql-database

  user-service:
    container_name: user-service
    build:
      context: ./user-service
      dockerfile: dockerfile
    image: user-service:latest
    networks:
      - studentTaskChecker
    ports:
      - "8080"
    depends_on:
      - config-service
      - discovery-service-peer1
      - discovery-service-peer2
      - mysql-database

 # frontend:
  #  container_name: frontend
   # build:
    #  context: ../frontend
     # dockerfile: dockerfile
#    image: front-end:latest
 #   networks:
  #    - studentTaskChecker
   # ports:
    #  - 3000:3000
#    depends_on:
 #     - gateway-service
  #  restart: on-failure
